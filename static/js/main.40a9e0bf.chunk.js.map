{"version":3,"sources":["context.js","components/contacts/Contract.js","components/contacts/Contacts.js","components/layout/header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/page/NotFound.js","components/page/about.js","App.js","serviceWorker.js","index.js"],"names":["MyContext","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contract","onShowClick","e","showContactInfo","className","onDeleteClick","_ref","delete","t0","_x","_x2","_this2","_this$props$contract","contract","name","email","phone","console","log","onClick","bind","style","cursor","margin","float","color","Link","to","marginRight","Contacts","react","contacts_Contract","Header","branding","href","defaultProps","TextInputGroup","label","error","placeholder","onChange","classnames","htmlFor","is-invalid","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","then","res","history","push","_this$state2","TextInputGroup_TextInputGroup","EditContact","upContactdata","abrupt","match","params","put","NotFound","AboutContact","classNames","App","context_Provider","HashRouter","basename","process","header","Switch","Route","exact","path","component","Contracts","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40a9e0bf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nconst reducer = (state,action) => {\r\n    // console.log(state.contacts[0].id);\r\n    // console.log(action.payload.id);\r\n     switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:state.contacts.filter(contact=>contact.id !==action.payload)\r\n            };\r\n         case 'ADD_CONTACT':\r\n             return {\r\n                 ...state,\r\n                 contacts:[action.payload,...state.contacts]\r\n             };\r\n         case 'UPDATE_CONTACT':\r\n             return {\r\n                 ...state,\r\n                 contacts:state.contacts.map(contact => (contact.id === action.payload.id ?  (contact = action.payload) : contact))\r\n             };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class  Provider extends Component {\r\n\r\n    async componentDidMount() {\r\n\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts:response.data});\r\n\r\n        // axios.\r\n        // get('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(res=>this.setState({contacts:res.data}));\r\n    }\r\n\r\n    state = {\r\n        contacts:[],\r\n        dispatch : action => this.setState(state =>\r\n            reducer(state,action))\r\n\r\n    };\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log(\"componentDidUpdate\");\r\n    // }\r\n    //\r\n    // componentWillUpdate() {\r\n    //     console.log(\"componentWillUpdate\");\r\n    // }\r\n\r\n\r\n    // function dispatch(action)\r\n     // {\r\n     //     return this.setState(state)\r\n     //     {\r\n     //         return reducer(state,action);\r\n     //     }\r\n     // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = MyContext.Consumer;\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer }  from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contract extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showContactInfo:true,\r\n            className:'fas fa-sort-down'\r\n        };\r\n    }\r\n\r\n    onShowClick =(id,e)=>{\r\n        if(this.state.showContactInfo)\r\n            this.setState({showContactInfo:false,className:'fas fa-sort-up'})\r\n        else\r\n            this.setState({showContactInfo:true,className:'fas fa-sort-down'})\r\n    }\r\n\r\n    onDeleteClick = async (id,dispatch) => {\r\n        // axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        //     .then(res=>dispatch({type:'DELETE_CONTACT',payload:id}));\r\n        try{\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type:'DELETE_CONTACT',payload:id});\r\n        }catch (e) {\r\n            dispatch({type:'DELETE_CONTACT',payload:id});\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    // ƒ dispatch(action) {\r\n    //     return _this.setState(function (state) {\r\n    //         return reducer(state, action);\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {id,name,email,phone} = this.props.contract;\r\n        console.log(this.props.contract);\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4><label onClick={this.onShowClick.bind(this,id)} style={{cursor:'pointer'}}>Name:{name}</label>\r\n                                <i onClick = {this.onShowClick.bind(this,id)} className={this.state.className} style={{margin:'15px',cursor:'pointer'}}></i>\r\n                                <i onClick= {this.onDeleteClick.bind(this,id,dispatch)} className=\"fas fa-times\" style={{cursor:'pointer',float:'right',color:'red'}}></i>\r\n                                <Link to={`/contact/edit/${id}`}><i className=\"fas fa-pencil-alt fr\" style={{cursor:'pointer',color:'black',marginRight:'1rem'}}></i> </Link>\r\n                            </h4>\r\n                            {!showContactInfo ? <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email:{email}</li>\r\n                                <li className=\"list-group-item\">Phone:{phone}</li>\r\n                            </ul> : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nContract.propTypes = {\r\n    contract:PropTypes.object.isRequired\r\n    // dispatch:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nexport default Contract;\r\n\r\n\r\n","import React, {Component, Fragment} from 'react';\r\nimport Contract from './Contract';\r\nimport { Consumer }  from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    // deleteContact = id => {\r\n    //\r\n    //     const { contacts } = this.state;\r\n    //     const newContact = contacts.filter(contact => contact.id !== id)\r\n    //\r\n    //     this.setState(\r\n    //         {contacts:newContact}\r\n    //     )\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const { contacts } = value;\r\n                    console.log(contacts);\r\n                    return(\r\n                        <Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span>\r\n                                <span>List</span>\r\n                            </h1>\r\n                            {contacts.map(contract=>(\r\n                                <Contract\r\n                                    key = {contract.id}\r\n                                    contract = {contract}\r\n                                />\r\n                            ))}\r\n                        </Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n        // const {contacts} = this.state;\r\n        //\r\n        // return (\r\n        //     <Fragment>\r\n        //         {contacts.map(contract=>(\r\n        //             <Contract\r\n        //                 key = {contract.id}\r\n        //                 contract = {contract}\r\n        //                 deleteClickHandler = {this.deleteContact.bind(this,contract.id)}\r\n        //             />\r\n        //         ))}\r\n        //     </Fragment>\r\n        // );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../App.css';\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n\r\n    return(\r\n      <nav className=\"nav navbar-dark navbar-expand-sm bg-danger sm-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand fl\">\r\n                {branding}\r\n            </a>\r\n            <ul className=\"navbar-nav mr-auto fr\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link fl\" ><i className=\"fa fa-home\"> Home</i></Link>\r\n                    <Link to=\"/contact/add\" className=\"nav-link fl\" ><i className=\"fa fa-plus\">Add</i></Link>\r\n                    <Link to=\"/about\" className=\"nav-link fl\"><i className=\"fa fa-down\">About</i></Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding:'Contact Manager'\r\n};\r\n\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import React, {} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nexport const TextInputGroup = ({\r\n    label,\r\n    name,\r\n    error,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <div className = {classnames('form-group')}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type = {type}\r\n                name={name}\r\n                placeholder = {placeholder}\r\n                className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name:PropTypes.string.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type:\"text\"\r\n    // require:\"This field is required\"\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport { Consumer } from '../../context';\r\nimport { TextInputGroup } from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    }\r\n\r\n    onChange = e => {this.setState({[e.target.name]:e.target.value})}\r\n\r\n    onSubmit = (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,phone} = this.state;\r\n\r\n        // check text field is null\r\n        if(name === '')\r\n        {\r\n            this.setState({errors:{name:'Name is required'}})\r\n            return;\r\n        }\r\n\r\n        if(email === '')\r\n        {\r\n            this.setState({errors:{email:'Email is required'}})\r\n            return;\r\n        }\r\n\r\n        if(phone === '')\r\n        {\r\n            this.setState({errors:{phone:'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n            .then(res=>dispatch({type:'ADD_CONTACT',payload:res.data}));\r\n\r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    // console.log(dispatch);\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = \"Name\"\r\n                                        name = \"name\"\r\n                                        placeholder=\"Enter the Name ...\"\r\n                                        value = {name}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Email\"\r\n                                        name = \"email\"\r\n                                        placeholder=\"Enter the Email ...\"\r\n                                        value = {email}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Phone\"\r\n                                        name = \"phone\"\r\n                                        placeholder=\"Enter the Phone ...\"\r\n                                        value = {phone}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport { Consumer } from '../../context';\r\nimport { TextInputGroup } from '../layout/TextInputGroup';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors:{}\r\n    }\r\n\r\n    onChange = e => {this.setState({[e.target.name]:e.target.value})}\r\n\r\n    async componentDidMount() {\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        // axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        //     .then(res=>this.setState({\r\n        //         name:res.data.name,\r\n        //         email:res.data.email,\r\n        //         phone:res.data.phone,\r\n        //     }));\r\n\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone,\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const {name,email,phone} = this.state;\r\n\r\n        // check text field is null\r\n        if(name === '')\r\n        {\r\n            this.setState({errors:{name:'Name is required'}})\r\n            return;\r\n        }\r\n\r\n        if(email === '')\r\n        {\r\n            this.setState({errors:{email:'Email is required'}})\r\n            return;\r\n        }\r\n\r\n        if(phone === '')\r\n        {\r\n            this.setState({errors:{phone:'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const upContactdata = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,upContactdata);\r\n\r\n        dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n\r\n        this.props.history.push('/');\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    // console.log(dispatch);\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                               Edit contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = \"Name\"\r\n                                        name = \"name\"\r\n                                        placeholder=\"Enter the Name ...\"\r\n                                        value = {name}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Email\"\r\n                                        name = \"email\"\r\n                                        placeholder=\"Enter the Email ...\"\r\n                                        value = {email}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = \"Phone\"\r\n                                        name = \"phone\"\r\n                                        placeholder=\"Enter the Phone ...\"\r\n                                        value = {phone}\r\n                                        onChange={this.onChange}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Edit Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span>Not Found s</h1>\r\n            <p className=\"lead\">Sorry,that page not exist</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nconst AboutContact = (props) => {\r\n    return (\r\n        <div>\r\n            {/*<h1 className={classNames('display-4')}>About Contact Manager{props.match.params.id}</h1>*/}\r\n            <h1 className={classNames('display-4')}>About Contact Manager</h1>\r\n            <p className=\"lead\">Test</p>\r\n            <p className=\"text-secondary\">Version1.0.0</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutContact;","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route,Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route,Switch } from 'react-router-dom';\nimport Contracts from './components/contacts/Contacts';\nimport Header from './components/layout/header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/page/NotFound';\nimport About from './components/page/about';\n// import Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider>\n            <Router basename = {process.env.PUBLIC_URL}>\n                <div className = \"App\">\n                    <Header/>\n                    <div className=\"container\">\n                        <Switch>\n                            <Route  exact path=\"/\" component={Contracts}/>\n                            <Route  exact path=\"/contact/add\" component={AddContact}/>\n                            <Route  exact path =\"/contact/edit/:id\" component={EditContact}/>\n                            {/*<Route exact path=\"/about/:id\" component = {About}/>*/}\n                            <Route  exact path=\"/about\" component = {About}/>\n                            {/*<Route exact path =\"/test\" component = {Test}/>*/}\n                            <Route component = {NotFound}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}